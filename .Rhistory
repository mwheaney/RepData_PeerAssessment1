?q
q()
iris
head(iris)
tapply(iris,iris$Species, mean)
tapply(iris,iris[Species], mean)
tapply(iris,Species, mean)
summary(iris)
?tapply
tapply(iris,Species=virginica, mean)
tapply(iris$Sepal.Length,iris$Species, mean)
mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
x <- tapply(mtcars$hp, mtcars$cyl, mean)
x$1-x$3
x[,1]
x[[,1]]
x[[1]]
x[[3]]-x[[1]]
tapply(iris$Sepal.Length,iris$Species, mean)
str(x)
?str
summary(x)
sd(x)
x
x$4
x$1
x[,4]
x[,1]
x[1,]
x[[1]]
(mean(x) - x[[1]])/sd(x)
(x[[1]] - mean(x))/sd(x)
?sapply
sdx <--sd(x)
meanx <--mean(x)
x-meanx
mean(x)
meanx <-mean(x)
sdx <-sd(x)
x-meanx
(x-meanx)/sdx
sdsx <- (x-meanx)/sdx
sum(sdsx)
?trunc
round(sum(sdsx), digits =4)
round(sum(sdsx), digits =10)
c<-mtcars
c
cbind (seq(along=c), c)
(seq(along=c)
(seq(along=c))
cbind (1:nrow(c), c)
cbind (1:nrow(c), c)
nrow(c)
cbind (1:31, c)
cbind (1:32, c)
cbind (c(1:nrow(c)), c)
cbind (as.numeric(1:nrow(c)), c)
d <-c
cbind (as.numeric(1:nrow(d)), d)
str(d)
rownames(d)
seq(along=d)
seq(along=d$mpg)
p <- c(5, 4, 2, 4, 3, 5, 2, 0, 4, 4, 5, 5, 3, 4, 3)
hist(p)
hist(p), col = "lightblue", border = "black",breaks=c(-0.5, 0.5, 1.5,2.5,3.5,4.5,5.5), main="Histogram of Rule Infractions", xlab = "Infractions", ylim=c(0,5))
hist(p, col = "lightblue", border = "black",breaks=c(-0.5, 0.5, 1.5,2.5,3.5,4.5,5.5), main="Histogram of Rule Infractions", xlab = "Infractions", ylim=c(0,5))
getwd()
read.fwf("UCI HAR Dataset/test/X_test.txt", widths = c(17,16))
read.fwf("UCI HAR Dataset/test/X_test.txt", widths = c(17,16, 16))
widths <- c(17, rep(16, 560))
read.fwf("UCI HAR Dataset/test/X_test.txt", widths = widths)
?read.table
test <- read.table("UCI HAR Dataset/test/X_test.txt")
View(test)
train <- read.table("UCI HAR Dataset/train/X_train.txt")
cnames <- read.table("UCI HAR Dataset/features.txt")
complete <- rbind(test, train)
head(cnames)
cnames$V2
colnames(complete) <- cnames$V2
str(complete)
grep(cnames$V2, "mean()")
grep(cnames$V2, "mean\(\)")
grep(cnames$V2, "mean\\(\\)")
grep("mean\\(\\)", cnames$V2)
grep("mean\\(\\)", cnames$V2, Values=True)
grep("mean\\(\\)", cnames$V2, Values=TRUE)
grep("mean\\(\\)", cnames$V2, values=TRUE)
?grep
grep("mean\\(\\)", cnames$V2, value=TRUE)
selectColumns <- grep("mean\\(\\)", cnames$V2, value=TRUE)
completeFiltered <- complete[,selectColumns]
testLabels <- read.table("UCI HAR Dataset/test/y_test.txt")
View(testLabels)
testSubjects <- read.table("UCI HAR Dataset/test/subject_test.txt")
?join_all
library(dplyr)
?join_all
??join_all
testData <- test
trainData <- train
testTable <- join_all(testLabels, testSubjects, testData)
join_all
join_all()
?cbind
testTable <- cbind(testLabels, testSubjects)
head(testTable)
testTable <- cbind(testTable, testData)
trainLabels <- read.table("UCI HAR Dataset/train/y_test.txt")
trainLabels <- read.table("UCI HAR Dataset/train/y_train.txt")
trainSubjects <- read.table("UCI HAR Dataset/train/subject_train.txt")
trainData <- read.table("UCI HAR Dataset/train/X_train.txt")
trainTable <- cbind(trainLabels, trainSubjects)
trainTable <- cbind(trainTable, trainData)
complete <- rbind(testTable, trainTable)
View(complete)
testTable <- cbind("test", testLabels)
head(testTable)
trainTable <- cbind("train", trainLabels)
trainTable <- cbind(trainTable, trainSubjects)
head(trainTable)
testTable <- cbind(testTable, testSubjects)
head(testTable)
testTable <- cbind(testTable, testData)
trainTable <- cbind(trainTable, trainData)
complete <- rbind(testTable, trainTable)
cnames <- c("group", "labels", "subject", read.table("UCI HAR Dataset/features.txt")
cnames <- c("group", "labels", "subject", read.table("UCI HAR Dataset/features.txt"))
cnames
cnames <- c("group", "labels", "subject")
cnames1 <- c("group", "labels", "subject")
cnames2 <- read.table("UCI HAR Dataset/features.txt")
cnames1
cnames2
cnames <- c(cnames1, cnames2$V2)
cnames
cnames2
head(cnames2)
read.table("UCI HAR Dataset/features.txt")$V2
cnames2 <- as.character(read.table("UCI HAR Dataset/features.txt")$V2)
str(cnames2)
cnames <- c(cnames1, cnames2$V2)
cnames <- c(cnames1, cnames2)
colnames(complete) <- cnames
complete <- rbind(testTable, trainTable)
colnames(testTable) <- cnames
colnames(trainTable) <- cnames
rm(complete)
complete <- rbind(testTable, trainTable)
str(complete)
source('C:/Users/Mark/Dropbox (Personal)/Code/run_analysis.R')
source('C:/Users/Mark/Dropbox (Personal)/Code/run_analysis.R')
source('C:/Users/Mark/Dropbox (Personal)/Code/run_analysis.R')
run_analysis
run_analysis()
rm(testData, testLabels)
source('C:/Users/Mark/Dropbox (Personal)/Code/run_analysis.R')
run_analysis()
rm()
rm(list=ls())
testLabels <- read.table("UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("UCI HAR Dataset/test/subject_test.txt")
testData <- read.table("UCI HAR Dataset/test/X_test.txt")
testTable <- cbind("test", testLabels)
testTable <- cbind(testTable, testSubjects)
testTable <- cbind(testTable, testData)
trainLabels <- read.table("UCI HAR Dataset/train/y_train.txt")
trainSubjects <- read.table("UCI HAR Dataset/train/subject_train.txt")
trainData <- read.table("UCI HAR Dataset/train/X_train.txt")
trainTable <- cbind("train", trainLabels)
trainTable <- cbind(trainTable, trainSubjects)
trainTable <- cbind(trainTable, trainData)
complete <- rbind(testTable, trainTable)
cnames <- c("group", "labels", "subject", as.character(read.table("UCI HAR Dataset/features.txt")$V2))
colnames(testTable) <- cnames
colnames(trainTable) <- cnames
complete <- rbind(testTable, trainTable)
source('C:/Users/Mark/Dropbox (Personal)/Code/run_analysis.R')
grep("mean\\(\\)", cnames, value=TRUE)
grep("mean\\(\\)|std\\(\\)", cnames, value=TRUE)
selectColumns <- grep("mean\\(\\)", cnames$V2, value=TRUE)
selectColumns <- grep("mean\\(\\)|std\\(\\)", cnames, value=TRUE)
selectColumns
selectColumns <- grep("^group|^labels|^subject|mean\\(\\)|std\\(\\)",
cnames, value=TRUE)
selectColumns
completeFiltered <- complete[,selectColumns]
source('C:/Users/Mark/Dropbox (Personal)/Code/run_analysis.R')
source('C:/Users/Mark/Dropbox (Personal)/Code/run_analysis.R')
source('C:/Users/Mark/Dropbox (Personal)/Code/run_analysis.R')
run_analysis
run_analysis()
warnings()
source('C:/Users/Mark/Dropbox (Personal)/Code/run_analysis.R')
run_analysis()
read.table("UCI HAR Dataset/activity_labels.txt")
read.table("UCI HAR Dataset/activity_labels.txt")$V2
activities <- read.table("UCI HAR Dataset/activity_labels.txt")$V2
activities
?recode
library(car)
install.packages(car)
install.packages("car")
?recode
??recode
recode(completeFiltered$labels, "1='Walking'; 2='Walking_upstairs")
library(car)
recode(completeFiltered$labels, "1='Walking'; 2='Walking_upstairs")
recode(completeFiltered$labels, "1='Walking'; 2='Walking_upstairs'")
completeFiltered$labels <- recode(completeFiltered$labels, "1='Walking'; 2='Walking_upstairs'")
completeFiltered$labels <- as.factor(recode(completeFiltered$labels, "1='Walking'; 2='Walking_upstairs'"))
completeFiltered$labels <- as.factor(recode(completeFiltered$labels,
"1='Walking'; 2='Walking_upstairs'"; 3='Walking_downstairs';
4='Sitting'; 5='Standing';6='Laying'))
completeFiltered$labels <- as.factor(recode(completeFiltered$labels, "1='Walking'; 2='Walking_upstairs'; 3='Walking_downstairs'; 4='Sitting'; 5='Standing';6='Laying'"))
completeFiltered$labels <- as.factor(recode(completeFiltered$labels,
"1='Walking'; 2='Walking_upstairs'; 3='Walking_downstairs';
4='Sitting'; 5='Standing';6='Laying'"))
completeFiltered$labels
cnames <- c("group", "labels", "subject",
as.character(read.table("UCI HAR Dataset/features.txt")$V2))
cnames
source('C:/Users/Mark/Dropbox (Personal)/Code/run_analysis.R')
View(completeFiltered)
rm(testLabels, testSubjects, testData)
rm(testLabels, testSubjects, testData)
rm(list = Filter(exists(testLabels, testSubjects, testData)))
rm(list = Filter(exists("testLabels", "testSubjects", "testData")))
rm(list = Filter(exists, c("testLabels", "testSubjects", "testData")))
rm(list = Filter(exists, c("testLabels", "testSubjects", "testData", "trainLabels", "trainSubjects", "trainData")))
rm(list = Filter(exists, c("testLabels", "testSubjects", "testData", "trainLabels", "trainSubjects", "trainData", "testTable", "trainTable", "complete")))
rm(list = Filter(exists, c("testLabels", "testSubjects", "testData", "trainLabels", "trainSubjects", "trainData", "testTable", "trainTable", "complete", selectColumns, cnames)))
rm(list = Filter(exists, c("testLabels", "testSubjects", "testData", "trainLabels", "trainSubjects", "trainData", "testTable", "trainTable", "complete", "selectColumns", "cnames")))
?cast
library(plyr)
?cast
??cast
?Filter
?filter
browseVignettes(package = "dplyr")
dplyr::summarise_each(iris, funs(mean))
dplyr::summarise_each(completeFiltered, funs(mean))
iris %>% group_by(Species) %>% summarise(avg = mean(Sepal.Width)) %>% arrange(avg)
iris %>% group_by(Species) %>% summarise(avg = mean(Sepal.Width))
iris %>% group_by(Species) %>% summarise(avg = mean(Sepal.Width)) %>% arrange(avg)
iris %>% group_by(Species)
iris %>% group_by(Species) %>% summarise(avg = mean(Sepal.Width)) %>% arrange(avg)
iris %>% group_by(Species) %>% summarise(avg = mean(Sepal.Width))
iris %>% summarise(avg = mean(Sepal.Width))
iris %>% mean(Sepal.Width)
iris %>% mean(iris$Sepal.Width)
iris %>% group_by(Species) %>% summarise(avg = mean(Sepal.Width)); avg
iris %>% group_by(Species) %>% summarise(avg = mean(Sepal.Width)) %>% arrange(avg)
iris
iris %>% group_by(Species) %>% summarise(avg = mean(Sepal.Width)) %>% arrange(avg)
i <- data.frame(iris)
View(i)
i[,mean(purchaseAmt),by="species"]
i[,mean(purchaseAmt),by="Species"]
i[,mean(Petal.Width),by="Species"]
i[,mean(Petal.Width),by=Species]
i[,Mean:=mean(Petal.Width),by=Species]
i[,Mean:=mean(Petal.Width), by=Species]
i[, Mean:=mean(Petal.Width), by=Species]
df1[,median(Petal.Width),by="Species"]
i[,median(Petal.Width),by="Species"]
i[,median(Petal.Width),by=Species]
library(data.table)
i[,median(Petal.Width),by=Species]
View(completeFiltered)
s<- split(completeFiltered, list(completeFiltered$group, completeFiltered$subject))
s
head(s)
str(s)
ss <- str(s)
colMeans(s)
colMeans(s[1])
qplot(votes, rating, data = movies)
library(ggplot2)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, geom=c("point", "smooth"))
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
g <- ggplot(movies, aes(votes, ratings))
g + geom_point()
g <- ggplot(movies, aes(votes, rating))
g + geom_point()
g + geom_point() + geom_smooth(method = lm) + geom_smooth()
?filter
?Filter
str(movies)
levels(movies$mpaa)
movies[, mpaas != ""]
movies[,movies$mpaas != ""]
movies[movies$mpaas != "",]
movies[movies$mpaas  "R",]
movies[movies$mpaas = "R",]
movies[movies$mpaa = "R",]
movies[movies$mpaa == "R",]
movies[movies$mpaa != "",]
g <- ggplot(movies[movies$mpaa != "",], aes(votes, rating))
g + col="rating"
g + geom_point()
g + facet_grid(. ~ rating)
g + geom_point() + facet_grid(. ~ rating)
g + geom_point() + facet_grid(. ~ mpaa)
g <- g + facet_grid(. ~ rating)
g
g + geom_point() + facet_grid(. ~ mpaa) + theme_bw()
ggplot(movies[movies$mpaa != "",], aes(votes, rating))
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa)) + geom_point()
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa), geom_point())
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, aplha = 1/2), geom_point())
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point()
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point() + theme_bw(base_family = "Times")
warnings()
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point() + theme_bw(base_family = "Helvetica")
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point() + theme_bw(base_family = "Times New Roman")
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point() + theme_bw(base_family = "Times New Roman Regular")
windowsFonts(T = "Times New Roman")
windowsFonts(T = "Times New Roman Regular")
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point() + theme_bw(base_family = "T")
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point() + theme_text(family= "T")
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point() + theme_bw(family = "T")
T
install.packages("extrafont")
library(extrafont)
font_import(pattern="[T/t]imes")
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point() + theme_bw(family = "times")
fonts()
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point() + theme_bw(base_family = "Times New Roman")
loadfonts(device="win")
ggplot(movies[movies$mpaa != "",], aes(votes, rating, color=mpaa, alpha = 1/2)) + geom_point() + theme_bw(base_family = "Times New Roman")
?lpoints
?lines
?lattice
??lattice
?lines
?axis
lpoints()
library(lattice)
lpoints()
?lpoints
install.packages("RODBC")
myconn <-odbcConnect("SQLExpress2014", uid="sa", pwd="!23456&")
library(ODBC)
library(RODBC)
myconn <-odbcConnect("SQLExpress2014", uid="sa", pwd="!23456&")
?RODBC
RShowDoc("RODBC", package="RODBC")
sqlTables(myconn)
odbcClose(myconn)
odbcCloseAll
odbcCloseAll()
rm(myconn)
myconn <-odbcConnect("nw", uid="nwuser", pwd="123456")
sqlTables(myconn)
sqlQuery(myconn, query = "select * from categories")
sqlQuery(myconn, query = "select * from Categories")
sqlQuery(myconn, query = "select top 1000 from Categories")
sqlColumns(myconn)
sqlQuery(channel = myconn, query = "select * from categories")
?sqlQuery
sqlQuery(channel = myconn, query = "select * from categories", 8)
cat <- sqlFetch(ch, "Categories")
cat <- sqlFetch(myconn, "Categories")
close(myconn)
getwd()
setwd("RepData_PeerAssessment1/")
read.csv("..\data\activity.csv")
read.csv("../data/activity.csv")
activity <- read.csv("../data/activity.csv")
View(activity)
activity <- read.csv("../data/activity.csv", na.rm = TRUE)
activity <- complete.cases(activity)
activity <- read.csv("../data/activity.csv")
activity2 <- activity[complete.cases(activity), ]
View(activity2)
View(activity)
View(activity2)
activity2 <- activity[complete.cases(activity), 2:4]
?complete.cases
activity3 <- activity2[, 2:4]
str(activity2)
library(dplyr)
?group_by
group_by(activity2, date)
bydate <- group_by(activity2, date)
bydate
View(bydate)
?Summarize
??Summarize
bydate <- group_by(activity2, as.factor(date))
str(bydate)
bydate
?subset
aggregate(activity2[, 3, list(activity2$date), mean])
aggregate(activity2[, 3], list(activity2$date), mean)
aggregate(activity2[, 1], list(activity2$date), mean)
a <- read.csv("../data/activity.csv")
a <- a[complete.cases(activity),]
a <- a[complete.cases(a),]
View(a)
aggregate(a[, 1], list(activity2$date), mean)
aggregate(a[, 1], list(a$date), mean)
sums <- aggregate(a[, 1], list(a$date), sum)
means <- aggregate(a[, 1], list(a$date), mean)
medians <- aggregate(a[, 1], list(a$date), median)
View(means)
View(medians)
View(sums)
aggregate(a[, 1], list(a$date), median
aggregate(a[, 1], list(a$date), median)
View(sums)
View(medians)
View(means)
sums[1,2]
sums[1,2] / means[1,2]
288/24
aggregate(a[, 1], list(a$date), FUN=median)
aggregate(a[, 1], list(a$date), summary)
subset(a, date="2012-11-02")
summary(a)
hist(sums)
hist(sums[,2])
summary(sums)
?hist
hist(sums[,2], main="Steps per day", xlab="Steps")
hist(sums[,2], main="Steps per day", ylim = c(0,30), xlab="Steps")
```{r}
library(dplyr)
a <- read.csv("../data/activity.csv")
af <- a[complete.cases(a),]
```
library(dplyr)
a <- read.csv("../data/activity.csv")
af <- a[complete.cases(a),]
sums <- aggregate(af[, 1], list(af$date), sum)
hist(sums[,2], main="Steps per day", ylim = c(0,30), xlab="Steps")
mean(sums[,2])
median(sums[,2])
View(af)
slices <- aggregate(af[, 1], list(af$interval), mean)
slices
?plot
View(slices)
plot(slices[,1], slices[,2])
plot(slices[,1], slices[,2], type=l)
plot(slices[,1], slices[,2], type="l")
plot(slices[,1], slices[,2], type="l", xlab = "Time slice", ylab = "Mean steps")
max(slices)
max(slices[.2])
max(slices[,2])
subset(slices, x = max(slices[,2]))
View(slices)
slices[slices$x = max(slices$x)]
slices[slices$x == max(slices$x)]
colnames(slices)
slices$Group.1[slices$x == max(slices$x)]
View(a)
is.na(a$steps)
sum(is.na(a$steps))
View(a)
a$steps[is.na{a.steps}] <- 999
a$steps[is.na(a.steps)] <- 999
a$steps[is.na(a$steps)] <- 999
a
sum(is.na(a$steps))
?impute
??impute
a <- read.csv("../data/activity.csv")
sum(is.na(a$steps))
i  <- impute(a$steps)
library(Hmisc)
i  <- impute(a$steps)
i
summary(i)
summary a$steps
summary(a$steps)
i  <- as.numeric(impute(a$steps))
summary(i)
a$steps  <- as.numeric(impute(a$steps))
summary(a$steps)
